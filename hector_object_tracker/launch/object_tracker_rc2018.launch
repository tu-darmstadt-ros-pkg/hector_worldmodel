<?xml version="1.0"?>

<launch>

    <arg name="default_checkpoint" value="
        pending_support: 1.0,
        active_support: 1.0,
        min_height: -10,
        max_height: 10,
        with_orientation: true,
    " />
    <arg name="default_object_dynamic" value="
        pending_support: 1.0,
        min_height: -1.5,
        max_height: 10.0,
        with_orientation: false,
        min_distance_between_objects: 0.3,
    " />

    <node pkg="hector_object_tracker" type="object_tracker" name="object_tracker" output="screen">
      <param name="project_objects" type="bool" value="true" />
      <param name="angle_variance" type="double" value="0.121846968"/>
      <param name="publish_interval" type="double" value="1.0" />
      <param name="frame_id" value="world" />

      <rosparam subst_value="True">
        barrel:
          active_support: 1.0
          marker_color: [0.0, 0.0, 0.8]
          max_correspondence_distance: 0.5
        flammable_liquid:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        inhalation_hazard:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        dangerous:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        flammable_solid:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        non_flammable_gas:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        explosive:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        infectious_substance:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]
        oxidizer:
          active_support: 1.0
          marker_color: [0.0, 0.8, 0.0]

        # known checkpoints
        dial_gauge: {
          $(arg default_checkpoint)
          position_fixed: true,
          marker_color: [0.8, 0.0, 0.0]
        }
        level_gauge: {
          $(arg default_checkpoint)
          position_fixed: true,
          marker_color: [0.0, 0.0, 0.8]
        }
        valve: {
          $(arg default_checkpoint)
          position_fixed: true,
          marker_color: [0.0, 0.8, 0.0]
        }
        hotspot: {
          $(arg default_checkpoint)
          position_fixed: true,
          marker_color: [0.8, 0.8, 0.0]
        }

        # detected checkpoints (update position and orientation offset)
        dial_gauge_detected: {
          $(arg default_checkpoint)
          marker_color: [1.0, 0.0, 0.0]
        }
        level_gauge_detected: {
          $(arg default_checkpoint)
          marker_color: [0.0, 0.0, 1.0]
        }
        valve_detected: {
          $(arg default_checkpoint)
          marker_color: [0.0, 1.0, 0.0]
        }
        hotspot_detected: {
          $(arg default_checkpoint)
          marker_color: [1.0, 1.0, 0.0]
        }

        # further known objects
        object_of_interest: {
          $(arg default_checkpoint)
          position_fixed: true,
          marker_color: [0.0, 0.8, 0.8]
        }

        # dynamically detected objects
        heat_source: {
          $(arg default_object_dynamic)
          active_support: 10.0,
          max_correspondence_distance: 2.25,
          marker_color: [0.8, 0.4, 0.0]
        }
        obstacle: {
          $(arg default_object_dynamic)
          active_support: 2.0,
          marker_color: [0.2, 0.2, 0.2]
        }
        gas_leak: {
          $(arg default_object_dynamic)
          active_support: 10.0,
          position_fixed: false,
          max_correspondence_distance: 3.0,
          marker_color:[0.5, 1.0, 0.8]
        }
      </rosparam>
      <remap from="get_distance_to_obstacle" to="/worldmodel_main/get_distance_to_obstacle" />
      <remap from="visualization_marker" to="worldmodel/visualization_marker" />
      <remap from="visualization_marker_array" to="worldmodel/visualization_marker_array" />
    </node>

    <!-- Verification Services -->
    <node pkg="argo_vision_worldmodel_interface" type="hotspot_filter.py" name="hotspot_filter" output="screen" />

</launch>
